---
openapi: 3.0.2
info:
  title: API Cargas - 1.0
  version: 1.0.0
  description: API definition of Cargas
  contact:
    name: Cargas-lakesgas
    url: https://lakesgas-cargas.silverlinevps.com
    email: achyuth@mailinator.com
paths:
  /API/GetNewCustomers:
    summary: Get list of new customers
    post:
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Customers'
              examples:
                New Customers Example:
                  value: '<Results>
  <DataSet>
    <Table>
      <CustomerID>77755</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312313</CustomerID>
    </Table>
  </DataSet>
</Results>'
                    
          description: Changed Customers
      operationId: GetNewCustomers
      summary: Get New Customers
  /API/GetPropaneTanks:
    summary: Get list of new customers
    post:
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Customers'
              examples:
                New Customers Example:
                  value: '<Results>
  <DataSet>
    <Table>
      <TankID>55</TankID>
    </Table>
    <Table>
      <TankID>55</TankID>
    </Table>
  </DataSet>
</Results>'
                    
          description: Get new Assets
      operationId: GetNewAssets
      summary: Get New Customers
  /API/GetChangedTanks:
    summary: Get list of new customers
    post:
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Customers'
              examples:
                New Customers Example:
                  value: '<Results>
  <DataSet>
    <Table>
      <EquipmentID>55</EquipmentID>
      <CustomerID>77755</CustomerID>
      <Date>159159</Date>
    </Table>
	<Table>
      <EquipmentID>56</EquipmentID>
      <CustomerID>77755</CustomerID>
      <Date>159159</Date>
    </Table>
    <Table>
      <EquipmentID>77</EquipmentID>
      <CustomerID>12312313</CustomerID>
      <Date>159159</Date>
    </Table>
  </DataSet>
</Results>'
                    
          description: Get changed Assets
      operationId: GetChangedAssets
      summary: Get Changed Assets
      
  /API/GetAllEquipmentByEquipmentID:
    summary: Get list of new customers
    post:
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Customers'
              examples:
                New Customers Example:
                  value: '<Results>
  <DataSet>
    <Table>
             <bEquipmentID>55</bEquipmentID>
             <CustomerID>77755</CustomerID>
             <LocationID>77</LocationID>
             <Inactive>false</Inactive>
             <TaxSchedule>West Virginia</TaxSchedule>
             <DeliveryBillToLocationID>77</DeliveryBillToLocationID>
             <ServiceBillToLocationID>77</ServiceBillToLocationID>
             <EquipmentType>Fuel Tank</EquipmentType>
             <SalesPerson></SalesPerson>
             <EquipmentDescription>Tank 1 Will Call</EquipmentDescription>
             <Instructions></Instructions>
             <Burner></Burner>
             <Nozzle></Nozzle>
             <SmokePipe></SmokePipe>
             <Manufacturer>manufacturerr</Manufacturer>
             <Model>modelpooo</Model>
             <SerialNumber>757575</SerialNumber>
             <PurchaseDate></PurchaseDate>
             <WarrantyStartDate></WarrantyStartDate>
             <WarrantyEndDate></WarrantyEndDate>
             <NonFuelTaxSchedule></NonFuelTaxSchedule>
             <TaxCode1></TaxCode1>
             <TaxCode2></TaxCode2>
             <FuelItem>PROPANE</FuelItem>
             <FuelType>PROPANE</FuelType>
             <TankSize>300</TankSize>
             <UsableSize>250</UsableSize>
             <OptimalDelivery>200</OptimalDelivery>
             <FillLocation></FillLocation>
             <IsDifficultDelivery>false</IsDifficultDelivery>
             <CallAhead>false</CallAhead>
             <TankPosition>Under Ground</TankPosition>
             <DeliveryType>Will Call</DeliveryType>
             <EstimatedNextDeliveryDate></EstimatedNextDeliveryDate>
             <EstimatedRunOutDate></EstimatedRunOutDate>
             <QuantityInTankToday></QuantityInTankToday>
             <ForecastType></ForecastType>
             <ServiceContract></ServiceContract>
             <PriceCode></PriceCode>
             <Attributes></Attributes>
         </Table>
		 <Table>
             <bEquipmentID>56</bEquipmentID>
             <CustomerID>77755</CustomerID>
             <LocationID>77</LocationID>
             <Inactive>false</Inactive>
             <TaxSchedule>West Virginia</TaxSchedule>
             <DeliveryBillToLocationID>77</DeliveryBillToLocationID>
             <ServiceBillToLocationID>77</ServiceBillToLocationID>
             <EquipmentType>Fuel Tank</EquipmentType>
             <SalesPerson></SalesPerson>
             <EquipmentDescription>Tank 1 Will Call</EquipmentDescription>
             <Instructions></Instructions>
             <Burner></Burner>
             <Nozzle></Nozzle>
             <SmokePipe></SmokePipe>
             <Manufacturer>manufacturerr</Manufacturer>
             <Model>modelpooo</Model>
             <SerialNumber>757576</SerialNumber>
             <PurchaseDate></PurchaseDate>
             <WarrantyStartDate></WarrantyStartDate>
             <WarrantyEndDate></WarrantyEndDate>
             <NonFuelTaxSchedule></NonFuelTaxSchedule>
             <TaxCode1></TaxCode1>
             <TaxCode2></TaxCode2>
             <FuelItem>PROPANE</FuelItem>
             <FuelType>PROPANE</FuelType>
             <TankSize>300</TankSize>
             <UsableSize>250</UsableSize>
             <OptimalDelivery>200</OptimalDelivery>
             <FillLocation></FillLocation>
             <IsDifficultDelivery>false</IsDifficultDelivery>
             <CallAhead>false</CallAhead>
             <TankPosition>Under Ground</TankPosition>
             <DeliveryType>Will Call</DeliveryType>
             <EstimatedNextDeliveryDate></EstimatedNextDeliveryDate>
             <EstimatedRunOutDate></EstimatedRunOutDate>
             <QuantityInTankToday></QuantityInTankToday>
             <ForecastType></ForecastType>
             <ServiceContract></ServiceContract>
             <PriceCode></PriceCode>
             <Attributes></Attributes>
         </Table>
  </DataSet>
</Results>'
                    
          description: Get changed Assets
      operationId: get EQuip
      summary: Get Changed Assets
  /API/GetCustomerAccount:
    summary: Get list of customer accounts
    post:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerId'
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Accounts'
              examples:
                Customer Accounts Example:
                  value: '<Results>
  <DataSet>
    <Table>
      <CustomerID>77755</CustomerID>
      <CustomerStatus>Active</CustomerStatus>
      <CustomerType>Agriculture</CustomerType>
      <EmailAddress>ayadav11@yopmail.com</EmailAddress>
      <Address1>PO BOX4422</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>sadasdd2</City>
      <State>sdasdasd2</State>
      <Zipcode>87895552</Zipcode>
      <ContactPerson>adasdsa2</ContactPerson>
      <CustomerLastName>singh136470</CustomerLastName>
      <CustomerFirstName>shreyashi136470</CustomerFirstName>
      <PrimaryPhone>7878978782</PrimaryPhone>
    </Table>
  </DataSet>
</Results>'
                   
          description: Changed
      operationId: GetCustomerAccounts
      summary: Get Customer Accounts
  /API/GetCustomerLocations:
    summary: Get customer locations
    post:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomerId'
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Locations'
              examples:
                Customer Locations Example:
                  value:
                    '<Results>
  <DataSet>
    <Table>
      <Name>dsfsadsad</Name>
      <Address1>edasdas</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>dsfsdf</City> 
      <State>dasdas</State>
      <Zipcode>546546422</Zipcode>
     <ContactPerson>dasda22</ContactPerson>
      <Inactive>false</Inactive>
      <LocationType></LocationType>
      <bLocationID>77</bLocationID>
      <PhoneNumber>(507) 227-4738</PhoneNumber>
    </Table>
    <Table>
      <Name>Primary Locationnnnnnnnnnnnnnn</Name>
      <Address1>500 INDIANA AVE22</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>ADRIAN</City>
      <State>MN</State>
      <Zipcode>56110</Zipcode>
      <ContactPerson></ContactPerson>
      <Inactive>false</Inactive>
      <LocationType></LocationType>
      <bLocationID>45667</bLocationID>
      <PhoneNumber>(507) 227-4738</PhoneNumber>
    </Table>
   
  </DataSet>
</Results>'
          description: Changed
      operationId: GetCustomerLocations
      summary: Get Customer Locations
components:
  schemas:
    TankID:
      type: object
      properties:
        CustomerID:
          type: string
          description: Tank Id
          example: 55
    CustomerId:
      type: object
      properties:
        CustomerID:
          type: string
          description: Customer Id
          example: 12312313
    Customers:
      title: Root Type for custoemrs
      description: The root of the customers type's schema.
      type: object
      properties:
        Results:
          type: object
          properties:
            DataSet:
              type: object
              properties:
                Table: 
                  type: array
                  items:
                    type: object
                    properties:
                      CustomerID:
                        type: string
      example:
        value: '<Results>
  <DataSet>
    <Table>
      <CustomerID>12312313</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312314</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312315</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312316</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312317</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312318</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312319</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312310</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312311</CustomerID>
    </Table>
    <Table>
      <CustomerID>12312312</CustomerID>
    </Table>
    <Table>
      <CustomerID>77755</CustomerID>
    </Table>
  </DataSet>
</Results>'
    Accounts:
      title: Root Type for accounts
      description: The root of the accounts type's schema.
      type: object
      properties:
        Results:
          type: object
          properties:
            DataSet:
              type: object
              properties:
                Table: 
                  type: array
                  items:
                    type: object
                    properties:
                      CustomerID:
                        type: string
                      CustomerStatus:
                        type: string
                      CustomerType:
                        type: string                  
                      EmailAddress:
                        type: string
                      Address1:
                        type: string                  
                      Address2:
                        type: string                  
                      Address3:
                        type: string                  
                      City:
                        type: string                  
                      State:
                        type: string                    
                      Zipcode:
                        type: string
                      ContactPerson:
                        type: string
                      PrimaryPhone:
                        type: string
                      CustomerLastName:
                        type: string
                      CustomerFirstName:
                        type: string
      example:
        Value: '<Results>
  <DataSet>
    <Table>
      <CustomerID>94603</CustomerID>
      <CustomerStatus>Active</CustomerStatus>
      <CustomerType>Agriculture</CustomerType>
      <EmailAddress>dt2013@hotmail.com</EmailAddress>
      <Address1>PO BOX442</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>ADRIAN</City>
      <State>MN</State>
      <Zipcode>56110</Zipcode>
      <ContactPerson></ContactPerson>
      <PrimaryPhone>5072274738</PrimaryPhone>
      <CustomerLastName>ROSALES</CustomerLastName>
      <CustomerFirstName>DANIELLE</CustomerFirstName>
    </Table>
  </DataSet>
</Results>'
        
    Locations:
      title: Root Type for locations
      description: The root of the locations type's schema.
      type: object
      properties:
        Results:
          type: object
          properties: 
            DataSet:
              type: object
              properties:
                Table: 
                  type: array
                  items:
                    type: object
                    properties:
                      Name:
                        type: string
                      Address1:
                        type: string                  
                      Address2:
                        type: string                  
                      Address3:
                        type: string                  
                      City:
                        type: string                  
                      State:
                        type: string                    
                      Zipcode:
                        type: string
                      ContactPerson:
                        type: string
                      Inactive:
                        type: boolean
                      LocationType:
                        type: string                  
                      PhoneNumber:
                        type: string
      example:
        Value: '<Results>
  <DataSet>
    <Table>
      <Name></Name>
      <Address1>PO BOX 442222222222</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>ADRIAN</City>
      <State>MN</State>
      <Zipcode>56110</Zipcode>
      <ContactPerson></ContactPerson>
      <Inactive>false</Inactive>
      <LocationType></LocationType>
      <PhoneNumber>(507) 227-4738</PhoneNumber>
    </Table>
    <Table>
  
      <Name>Primary Location</Name>
      <Address1>500 INDIANA AVE</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>ADRIAN</City>
      <State>MN</State>
      <Zipcode>56110</Zipcode>
      <ContactPerson></ContactPerson>
      <Inactive>false</Inactive>
      <LocationType></LocationType>
      <PhoneNumber>(507) 227-4738</PhoneNumber>
    </Table>
    <Table>
      <Name>Primary Location</Name>
      <Address1>500 INDIANA AVEEEEESSSSSSSSS</Address1>
      <Address2></Address2>
      <Address3></Address3>
      <City>ADRIAN</City>
      <State>MN</State>
      <Zipcode>56110</Zipcode>
      <ContactPerson></ContactPerson>
      <Inactive>false</Inactive>
      <LocationType>Owner</LocationType>
      <PhoneNumber>(507) 227-4738</PhoneNumber>
    </Table>
  </DataSet>
</Results>'
